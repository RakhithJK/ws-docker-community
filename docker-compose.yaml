version: "3"

services:
  api:
    image: wsbackend-api:latest
    hostname: ws-api
    build:
      context: .
      dockerfile: api.dockerfile
    links:
      - elasticsearch
      - postgres
    ports:
      - "8000:8000"
  tasknode:
    image: wsbackend-tasknode:latest
    build:
      context: .
      dockerfile: tasknode.dockerfile
    links:
      - elasticsearch
      - postgres
  redis:
    image: redis:latest
    hostname: ws-redis
  elasticsearch:
    image: elasticsearch:latest
    hostname: ws-elasticsearch
    volumes:
      - "./data/elasticsearch:/usr/share/elasticsearch/data"
    ports:
      - "9200:9200"
  rabbitmq:
    image: rabbitmq:3-management
    hostname: ws-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=wsuser
      - RABBITMQ_DEFAULT_PASS=wspassword
      - RABBITMQ_DEFAULT_VHOST=wsvhost
  frontend:
    image: wsfrontend:latest
    hostname: ws-frontend
    build:
      context: .
      dockerfile: frontend.dockerfile
    ports:
      - "8001:80"
    links:
      - elasticsearch
      - postgres
  postgres:
    image: postgres:alpine
    hostname: ws-postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - "./data/postgres/data:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
